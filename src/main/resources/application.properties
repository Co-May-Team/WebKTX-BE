#spring.datasource.url=jdbc:mysql://localhost:3306/cmd
#spring.datasource.username=root
#
#spring.datasource.password=123456
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = none
#
#spring.jpa.show-sql=true
##logging.level.org.hibernate = ERROR
#
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext


# ===============================
# DATABASE
# ===============================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://222.255.238.159:3303/webdb
spring.datasource.username=root
spring.datasource.password=CMDqwe@2022
# ===============================
#Image upload config
# ===============================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# ===============================
# JPA / HIBERNATE
# ===============================
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
server.port = 8080
# ===============================
# ===============================
# Email config
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=comaydorm@gmail.com
spring.mail.password=kqrsffbyzrfidewy
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# ===============================
# ===============================
# Oauth 2.0 config
# ===============================
spring.security.oauth2.client.registration.google.client-id=864811280914-uron2hmb33ss57c3eb7jqs7ekbkm45oi.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com
